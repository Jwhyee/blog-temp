{"componentChunkName":"component---src-templates-blog-post-js","path":"/PROJECT/legacy-refactoring-1/","result":{"data":{"site":{"siteMetadata":{"title":"Jwhy Blogitory","author":"[Jwhy]","siteUrl":"https://jwhyee.github.io","comment":{"disqusShortName":"","utterances":"Jwhyee/Jwhyee.github.io"},"sponsor":{"buyMeACoffeeId":"jwhy"}}},"markdownRemark":{"id":"d4f36572-d625-5326-baca-a19fc1dd833e","excerpt":"💬 수정 사유 스프링 공부를 시작한지 한 달 만에 만든 프로젝트를 수정해보려고 한다.\n, ,  등에 대한 이해도가 많이 부족해서 제대로 사용하지 않았다.\n이번 기회에 레거시 코드를 걷어내고 새로 작성하면서 성능에 대한 차이도 살펴보고, 공부하는 시간을 가져야겠다는 생각을 했다. 🛠 수정할 사항 대략 1년 전에 개발한 프로젝트이기 때문에 천천히 진행해보고자 한다. 단방향 개발 현재 프로젝트의 서비스 로직이 대부분  에 들어가있는 상태이다.\n만약 Web…","html":"<h2 id=\"-수정-사유\" style=\"position:relative;\"><a href=\"#-%EC%88%98%EC%A0%95-%EC%82%AC%EC%9C%A0\" aria-label=\" 수정 사유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💬 수정 사유</h2>\n<p>스프링 공부를 시작한지 한 달 만에 만든 프로젝트를 수정해보려고 한다.<br>\n<code class=\"language-text\">DTO</code>, <code class=\"language-text\">REST API</code>, <code class=\"language-text\">Exception</code> 등에 대한 이해도가 많이 부족해서 제대로 사용하지 않았다.<br>\n이번 기회에 <strong>레거시 코드</strong>를 걷어내고 새로 작성하면서 성능에 대한 차이도 살펴보고, 공부하는 시간을 가져야겠다는 생각을 했다.</p>\n<h2 id=\"-수정할-사항\" style=\"position:relative;\"><a href=\"#-%EC%88%98%EC%A0%95%ED%95%A0-%EC%82%AC%ED%95%AD\" aria-label=\" 수정할 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛠 수정할 사항</h2>\n<p>대략 1년 전에 개발한 프로젝트이기 때문에 천천히 진행해보고자 한다.</p>\n<h3 id=\"단방향-개발\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EB%B0%A9%ED%96%A5-%EA%B0%9C%EB%B0%9C\" aria-label=\"단방향 개발 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단방향 개발</h3>\n<p>현재 프로젝트의 서비스 로직이 대부분 <code class=\"language-text\">Controller</code> 에 들어가있는 상태이다.<br>\n만약 Web에 대한 기술이 바뀌더라도 <code class=\"language-text\">Service</code> 는 건재해야하기 때문에 기존 서비스 로직을 옮길 것이다.</p>\n<h3 id=\"로그인-유저-관리\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%9C%A0%EC%A0%80-%EA%B4%80%EB%A6%AC\" aria-label=\"로그인 유저 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로그인 유저 관리</h3>\n<p>기존에는 <code class=\"language-text\">Security</code>를 사용할 줄 몰라 모든 <code class=\"language-text\">Controller</code>의 메소드에서 <code class=\"language-text\">Member</code> 객체를 전달해서 사용했다.<br>\n즉, <code class=\"language-text\">Thymeleaf</code>에서도 <code class=\"language-text\">sec:authorize=\"isAuthenticated()\"</code>를 사용할 수 없는 상태였다.<br>\n이를 보완하기 위해 <code class=\"language-text\">UserDetailsService</code>를 다시 구현해보고자 한다.</p>\n<h3 id=\"thymeleaf-layout\" style=\"position:relative;\"><a href=\"#thymeleaf-layout\" aria-label=\"thymeleaf layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Thymeleaf Layout</h3>\n<p>당시에는 <code class=\"language-text\">layout</code>에 대한 존재조차 몰라 무엇이든 Fragment 하나에 다 때려넣고 사용했다.<br>\n덕분에 <code class=\"language-text\">fragments.html</code>에는 <strong>3,000줄</strong>이 넘는 코드가 들어가게 되었다.<br>\n이를 <code class=\"language-text\">layout</code>을 통해 필요한 부분만 렌더링하고, <code class=\"language-text\">fragments</code>도 세분화하는 작업을 진행하려고 한다.</p>\n<h3 id=\"field-관리\" style=\"position:relative;\"><a href=\"#field-%EA%B4%80%EB%A6%AC\" aria-label=\"field 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>field 관리</h3>\n<p><code class=\"language-text\">ModelMapper</code>를 적용하기 위해서는 <code class=\"language-text\">Entity</code>와 <code class=\"language-text\">DTO</code>의 <code class=\"language-text\">filed</code>를 동일하게 맞춰줄 필요가 있다.<br>\n<code class=\"language-text\">Thymeleaf</code>와 동일하게 가장 오래 걸리는 작업이며, <code class=\"language-text\">View</code>에 적힌 <code class=\"language-text\">name</code> 또한 수정해야하기 때문에 가장 복잡할 것 같다.</p>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 마무리</h2>\n<p>위 사항 외에도 더 많은 작업을 진행할 것 같다.<br>\n예전 코드를 보자니 부끄럽기도 하지만 공부하기엔 가장 최적의 프로젝트라고 생각한다.<br>\n하나하나 수정해보면서 한 테마별로 포스팅을 진행하고, 이전 코드와 비교해보면서 공부할 생각이다.</p>","frontmatter":{"title":"[Spring][Refactoring] - 레거시 코드 리팩터링(0)","date":"December 20, 2022"}}},"pageContext":{"slug":"/PROJECT/legacy-refactoring-1/","previous":{"fields":{"slug":"/spring-boot/optional/"},"frontmatter":{"title":"[Spring] - Optional의 사용"}},"next":null}}}