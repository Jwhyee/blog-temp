{"componentChunkName":"component---src-templates-blog-post-js","path":"/ERROR/empty-encoded-password/","result":{"data":{"site":{"siteMetadata":{"title":"Jwhy Blogitory","author":"[Jwhy]","siteUrl":"https://jwhyee.github.io","comment":{"disqusShortName":"","utterances":"Jwhyee/Jwhyee.github.io"},"sponsor":{"buyMeACoffeeId":"jwhy"}}},"markdownRemark":{"id":"0517edf5-1b4c-572f-8ea9-940a2e2cdb53","excerpt":"…","html":"<h3 id=\"-상황-설명\" style=\"position:relative;\"><a href=\"#-%EC%83%81%ED%99%A9-%EC%84%A4%EB%AA%85\" aria-label=\" 상황 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💬 상황 설명</h3>\n<blockquote>\n<p>비밀번호 변경 기능을 구현하던 중 아래와 같은 에러 구문 확인<br>\n<code class=\"language-text\">log</code>도 없이 단순히 아래 구문만 뜬게 이상하여 <code class=\"language-text\">Bean</code> 등록이 제대로 되어있는지, 로직에는 문제가 없는지 확인을 했지만 아무런 문제가 없었다.<br>\n문제를 좁혀가며 로깅을 진행하였고, <code class=\"language-text\">MemberContext</code>의 <code class=\"language-text\">getPassword()</code>에서 <code class=\"language-text\">null</code>값이 찍히는 것을 확인하였다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Empty encoded password</code></pre></div>\n<h3 id=\"-구현-코드\" style=\"position:relative;\"><a href=\"#-%EA%B5%AC%ED%98%84-%EC%BD%94%EB%93%9C\" aria-label=\" 구현 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛠 구현 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemberController</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">doModifyPassword</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ModifyPasswordDto</span> dto<span class=\"token punctuation\">,</span> \n                                   <span class=\"token annotation punctuation\">@AuthenticationPrincipal</span> <span class=\"token class-name\">MemberContext</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">checkMatchPassword</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getMember</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dto<span class=\"token punctuation\">.</span><span class=\"token function\">getOldPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemberService</span><span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkMatchPassword</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> oldPassword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> passwordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>oldPassword<span class=\"token punctuation\">,</span> member<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"-원인-분석\" style=\"position:relative;\"><a href=\"#-%EC%9B%90%EC%9D%B8-%EB%B6%84%EC%84%9D\" aria-label=\" 원인 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔎 원인 분석</h3>\n<p>검색을 통해 확인해보니 아래와 같은 글귀를 확인할 수 있었다.</p>\n<blockquote>\n<p><code class=\"language-text\">Spring Security</code>는 인증을 수행하면 <code class=\"language-text\">Authentication</code> 객체에서 암호를 지우는 과정을 수행한다.</p>\n</blockquote>\n<p>즉, <code class=\"language-text\">@AuthenticationPrincipal</code> 어노테이션을 사용해 가져온 <code class=\"language-text\">getMember().getPassword()</code>가 <code class=\"language-text\">null</code>이 찍히는 이유는\n<code class=\"language-text\">Spring Security</code>에서 인증을 완료해서 <code class=\"language-text\">password</code>를 날려버린 것이다.</p>\n<h3 id=\"-해결-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\" aria-label=\" 해결 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✅ 해결 과정</h3>\n<blockquote>\n<p><code class=\"language-text\">SecurityConfig</code>를 통해 해결하면 인증 후에도 <code class=\"language-text\">password</code>가 지워지지 않아 <code class=\"language-text\">JWT</code> 연동 시 보안에 취약해질 수 있다.<br>\n때문에 <code class=\"language-text\">MemberContext</code>의 <code class=\"language-text\">username</code>을 활용해서 다시 찾아오는 방안으로 수정했다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MemberService</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 레거시 코드</span>\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkMatchPassword</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Member</span> member<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> oldPassword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> passwordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>oldPassword<span class=\"token punctuation\">,</span> member<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 개선 코드</span>\n    <span class=\"token annotation punctuation\">@Transactional</span><span class=\"token punctuation\">(</span>readOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkMatchPassword</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> username<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> oldPassword<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Member</span> currentMember <span class=\"token operator\">=</span> memberRepository<span class=\"token punctuation\">.</span><span class=\"token function\">findByUsername</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentMember <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> passwordEncoder<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>oldPassword<span class=\"token punctuation\">,</span> currentMember<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p><a href=\"https://java8.tistory.com/m/509\">참고 블로그1</a><br>\n<a href=\"https://javachoi.tistory.com/421\">참고 블로그2</a></p>\n</blockquote>","frontmatter":{"title":"empty-encoded-password","date":"October 26, 2022"}}},"pageContext":{"slug":"/ERROR/empty-encoded-password/","previous":{"fields":{"slug":"/ERROR/gmail-error/"},"frontmatter":{"title":"gmail-error"}},"next":{"fields":{"slug":"/PS/prg/"},"frontmatter":{"title":"프로그래머스 기사단원의 무기(JAVA)"}}}}}